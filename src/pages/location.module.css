/* un conteneur flexible avec une direction de colonne. */
.location {
    display: flex;
    flex-direction: column;
}

.location h2 {
    font-family: Montserrat;
    font-size: 18px;
    line-height: 26px;
    font-weight: 500;
    letter-spacing: 0em;
}

/* classe "info" à l'intérieur de l'élément avec la classe "location".
 Il configure ces éléments comme des conteneurs flexibles avec
 un espacement entre les enfants, une couleur de texte spécifique, et plus. */
.location .info {
    display: flex;
    justify-content: space-between;
    gap: 40px;
    color: #FF6060;
}
.location .info h1 {
    font-family: Montserrat;
    font-size: 36px;
    font-weight: 500;
    line-height: 51px;
    letter-spacing: 0em;
    text-align: left;
    margin: 0;
}

.location .info h2 {
    text-align: left;
    margin: 0;
}

/* des conteneurs flexibles avec une direction de ligne,
 un alignement des éléments et d'autres styles. */
.location .profil {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 10px;
    justify-content: right;
}

.location .profil h2 {
    text-align: right;
}

.location .profil img {
    border-radius: 32px;
    height: 64px;
    width: 64px;
}

/*  Elément pour occuper 50% de l'espace disponible. */
.location .mid {
    flex-basis: 50%;
}

.tags {
    display: flex;
    flex-direction: row;
    /* Utilisation de gap pour définir espace de 10 pixels entre les éléments enfants. */
    gap: 10px;
    margin: 20px 0;
    /* Permet aux éléments enfants de passer à la ligne suivante lorsque l'espace est insuffisant. */
    flex-wrap: wrap;
}

@media (max-width: 500px) {
    .location .info {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }
    /* Mise en page des éléments des classes : */
    .location .rateprof {
        /* Utilisation de Flexbox pour disposer les éléments horizontalement */
        display: flex;
        flex-direction: row-reverse; /* Inverse l'ordre des éléments */
        justify-content: space-between; /* Espace les éléments à l'horizontale */
        align-items: center; /* Centre les éléments à la verticale */
    }

    {/* <div className={[styles.subinfo, styles.info].join(" ")}> 
    Pour appliquer plusieurs classes CSS à un élément.

    Cette régle définit marge de 10 pixels (gap) entre ces éléments,
    ce qui peut affecter disposition des éléments lorsqu'ils sont imbriqués uns dans autres.*/}
    .location .info{
        gap: 10px
    }
    {/* Cette régle ajoute une marge supérieure de 20 pixels à ces éléments, 
    ce qui peut créer espace entre les éléments portant ces classes.*/}
    .location .subinfo{
        margin-top: 20px;
    }

    .location .info h1 {
        font-size: 18px;
        line-height: 25px;
        margin-bottom: 10px;
    }

    .location h2 {
        font-size: 14px;
        line-height: 20px;
    }
}